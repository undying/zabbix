
##########################################################
# shared functions for aerospike discovery/check scripts #
##########################################################

function cleanup(){
  rm -f ${data_file}
}

function value_type(){
  local value=${1}

  case ${value} in
    [0-9]*)
      echo int
      ;;
    *)
      echo string
  esac

  return 0
}

function normalize_value(){
  local value=${1}

  case ${value} in
    [Tt][Rr][Uu][Ee])
      echo 1
      ;;
    [Ff][Aa][Ll][Ss][Ee])
      echo 0
      ;;
    *)
      echo ${value}
  esac
}


function as_get_config(){
  local aerospike_host=${1}
  local asinfo_cmd=${2}
  local data_file=${3}

  while read line;do
    IFS="=" read key value <<<"${line}"
    [ -n "${metrics_config_whitelist[${key}]}" ] || continue

    value=$(normalize_value ${value})
    local v_type=$(value_type ${value})

    local v_multiplier=${metrics_config_multiplier[${key}]}
    [ -n "${v_multiplier}" ] && key+=,${v_multiplier}

    echo "\"${aerospike_host}\" as[get-config,${v_type},${key}] ${value}" >> ${data_file}
  done < <(${asinfo_cmd})
}

function as_statistics(){
  local aerospike_host=${1}
  local asinfo_cmd=${2}
  local data_file=${3}

  while read line;do
    IFS="=" read key value <<<"${line}"

    value=$(normalize_value ${value})
    local v_type=$(value_type ${value})

    [ -n "${metrics_statistics_counters[${key}]}" ] && v_type=count

    local v_multiplier=${metrics_statistics_multiplier[${key}]}
    [ -n "${v_multiplier}" ] && key+=,${v_multiplier}

    echo "\"${aerospike_host}\" as_statistics[${v_type},${key}] ${value}" >> ${data_file}
  done < <(${asinfo_cmd})
}

function as_sets_stat(){
  local aerospike_namespace=${1}
  local aerospike_host=${2}
  local asinfo_cmd=${3}
  local data_file=${4}

  while read line;do
    local as_set=${line##*set=}
    local as_set=${as_set%%:*}

    IFS=":"
    for set_line in ${line#*:*:};do
      IFS="=" read key value <<<"${set_line}"

      value=$(normalize_value ${value})
      local v_type=$(value_type ${value})

      [ -n "${metrics_set_counters[${key}]}" ] && v_type=count

      echo "\"${aerospike_host}\" as_set[${aerospike_namespace},${as_set},${v_type},${key}] ${value}" >> ${data_file}
    done
    unset IFS
  done < <(${asinfo_cmd})
}

function as_ns_stat(){
  local aerospike_namespace=${1}
  local aerospike_host=${2}
  local asinfo_cmd=${3}
  local data_file=${4}

  while read line;do
    IFS="=" read key value <<<"${line}"

    [ -n "${metrics_namespace_whitelist[${key}]}" ] || continue

    value=$(normalize_value ${value})
    local v_type=$(value_type ${value})

    [ -n "${metrics_namespace_counters[${key}]}" ] && v_type=count

    echo "\"${aerospike_host}\" as_namespace[${aerospike_namespace},${v_type},${key}] ${value}" >> ${data_file}
  done < <(${asinfo_cmd})
}

# vi:syntax=sh
